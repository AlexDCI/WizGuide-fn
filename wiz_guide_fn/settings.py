from pathlib import Path
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
load_dotenv()

# üîë OpenAI API KEY (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# üìÅ –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞
BASE_DIR = Path(__file__).resolve().parent.parent

# ‚ö†Ô∏è –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á
SECRET_KEY = os.getenv('SECRET_KEY')

# üîß –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
DEBUG = True

ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "localhost,127.0.0.1").split(",")
CSRF_TRUSTED_ORIGINS = os.getenv("CSRF_TRUSTED_ORIGINS", "http://localhost").split(",")

# üß© –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'main',
    'users',  # –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –∫–∞–∫ –º–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    # Allauth
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ
    'django_extensions',
]

# üß± Middleware
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # –î–ª—è —Å—Ç–∞—Ç–∏–∫–∏ –≤ –ø—Ä–æ–¥–µ

    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'wiz_guide_fn.urls'

# üìê –®–∞–±–ª–æ–Ω—ã
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'debug': True,
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',  # üîë –≤–∞–∂–Ω–æ –¥–ª—è allauth
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'wiz_guide_fn.wsgi.application'

# üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('POSTGRES_DB', 'wizguide_bd'),
        'USER': os.getenv('POSTGRES_USER', 'wizguide_user'),
        'PASSWORD': os.getenv('POSTGRES_PASSWORD', 'supersecurepassword'),
        'HOST': os.getenv('DB_HOST', 'localhost'),
        'PORT': os.getenv('DB_PORT', '5432'),
    }
}

# üîê –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–æ–ª–µ–π
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –º–æ–¥–µ–ª—å
AUTH_USER_MODEL = 'users.CustomUser'

# üåê –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# üñºÔ∏è –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = BASE_DIR / 'staticfiles'

# üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã
LOGIN_URL = '/accounts/login/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

# üß† Django Allauth
SITE_ID = int(os.getenv("SITE_ID", 1))

AUTHENTICATION_BACKENDS = [
    'allauth.account.auth_backends.AuthenticationBackend',  # Allauth backend
    'django.contrib.auth.backends.ModelBackend',  # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π backend
]

# ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ allauth
ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
ACCOUNT_USERNAME_REQUIRED = True
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = True
ACCOUNT_EMAIL_VERIFICATION = "none"  # –ú–æ–∂–Ω–æ "optional" –∏–ª–∏ "mandatory"

# üåê Google OAuth
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': ['profile', 'email'],
        'AUTH_PARAMS': {'access_type': 'online'},
        'OAUTH_PKCE_ENABLED': True,
    }
}


# üß™ –î–ª—è —Ç–µ—Å—Ç–æ–≤
TEST_RUNNER = 'django.test.runner.DiscoverRunner'

# üõ† –ê–≤—Ç–æ-–∫–ª—é—á–∏
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

